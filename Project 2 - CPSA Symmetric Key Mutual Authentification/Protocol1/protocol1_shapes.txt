(comment "CPSA 4.4.2")
(comment "Extracted shapes")

(herald "Protocol1")

(comment "CPSA 4.4.2")

(comment "All input read from protocol1.scm")

(defprotocol protocol1 basic
  (defrole authserv
    (vars (a b as name) (nonceA text) (session_key skey))
    (trace (recv (cat a b nonceA))
      (send
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))))
    (uniq-orig session_key))
  (defrole server
    (vars (a b as name) (nonceB text) (session_key skey))
    (trace (recv (enc session_key a (ltk b as)))
      (send (enc nonceB session_key))
      (recv (enc (hash nonceB) session_key))))
  (defrole client
    (vars (a b as name) (nonceA nonceB text) (tkt_as mesg)
      (session_key skey))
    (trace (send (cat a b nonceA))
      (recv (enc nonceA b session_key tkt_as (ltk a as))) (send tkt_as)
      (recv (enc nonceB session_key))
      (send (enc (hash nonceB) session_key))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false)))))

(defskeleton protocol1
  (vars (session_key skey) (nonceB text) (a b as name))
  (defstrand server 3 (session_key session_key) (nonceB nonceB) (a a)
    (b b) (as as))
  (non-orig (ltk a as) (ltk b as))
  (uniq-orig nonceB)
  (traces
    ((recv (enc session_key a (ltk b as)))
      (send (enc nonceB session_key))
      (recv (enc (hash nonceB) session_key))))
  (label 0)
  (unrealized (0 0))
  (origs (nonceB (0 1)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton protocol1
  (vars (session_key skey) (nonceB nonceA text) (a b as name))
  (defstrand server 3 (session_key session_key) (nonceB nonceB) (a a)
    (b b) (as as))
  (defstrand authserv 2 (session_key session_key) (nonceA nonceA) (a a)
    (b b) (as as))
  (defstrand client 5 (tkt_as (enc session_key a (ltk b as)))
    (session_key session_key) (nonceA nonceA) (nonceB nonceB) (a a)
    (b b) (as as))
  (precedes ((0 1) (2 3)) ((1 1) (2 1)) ((2 2) (0 0)) ((2 4) (0 2)))
  (non-orig (ltk a as) (ltk b as))
  (uniq-orig session_key nonceB)
  (operation encryption-test (displaced 2 3 client 5)
    (enc (hash nonceB) session_key) (0 2))
  (traces
    ((recv (enc session_key a (ltk b as)))
      (send (enc nonceB session_key))
      (recv (enc (hash nonceB) session_key)))
    ((recv (cat a b nonceA))
      (send
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))))
    ((send (cat a b nonceA))
      (recv
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))) (send (enc session_key a (ltk b as)))
      (recv (enc nonceB session_key))
      (send (enc (hash nonceB) session_key))))
  (label 3)
  (parent 0)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (as as) (nonceB nonceB) (session_key session_key))))
  (origs (session_key (1 1)) (nonceB (0 1))))

(defskeleton protocol1
  (vars (session_key skey) (nonceB nonceA text) (a b as name))
  (defstrand server 3 (session_key session_key) (nonceB nonceB) (a a)
    (b b) (as as))
  (defstrand authserv 2 (session_key session_key) (nonceA nonceA) (a a)
    (b b) (as as))
  (defstrand client 3 (tkt_as (enc session_key a (ltk b as)))
    (session_key session_key) (nonceA nonceA) (a a) (b b) (as as))
  (defstrand client 5 (tkt_as (enc session_key a (ltk b as)))
    (session_key session_key) (nonceA nonceA) (nonceB nonceB) (a a)
    (b b) (as as))
  (precedes ((0 1) (3 3)) ((1 1) (2 1)) ((1 1) (3 1)) ((2 2) (0 0))
    ((3 4) (0 2)))
  (non-orig (ltk a as) (ltk b as))
  (uniq-orig session_key nonceB)
  (operation nonce-test
    (contracted (a-0 a) (b-0 b) (as-0 as) (nonceA-0 nonceA)
      (tkt_as (enc session_key a (ltk b as)))) session_key (3 1)
    (enc nonceA b session_key (enc session_key a (ltk b as))
      (ltk a as)))
  (traces
    ((recv (enc session_key a (ltk b as)))
      (send (enc nonceB session_key))
      (recv (enc (hash nonceB) session_key)))
    ((recv (cat a b nonceA))
      (send
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))))
    ((send (cat a b nonceA))
      (recv
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))) (send (enc session_key a (ltk b as))))
    ((send (cat a b nonceA))
      (recv
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))) (send (enc session_key a (ltk b as)))
      (recv (enc nonceB session_key))
      (send (enc (hash nonceB) session_key))))
  (label 6)
  (parent 0)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (as as) (nonceB nonceB) (session_key session_key))))
  (origs (session_key (1 1)) (nonceB (0 1))))

(comment "Nothing left to do")

(defprotocol protocol1 basic
  (defrole authserv
    (vars (a b as name) (nonceA text) (session_key skey))
    (trace (recv (cat a b nonceA))
      (send
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))))
    (uniq-orig session_key))
  (defrole server
    (vars (a b as name) (nonceB text) (session_key skey))
    (trace (recv (enc session_key a (ltk b as)))
      (send (enc nonceB session_key))
      (recv (enc (hash nonceB) session_key))))
  (defrole client
    (vars (a b as name) (nonceA nonceB text) (tkt_as mesg)
      (session_key skey))
    (trace (send (cat a b nonceA))
      (recv (enc nonceA b session_key tkt_as (ltk a as))) (send tkt_as)
      (recv (enc nonceB session_key))
      (send (enc (hash nonceB) session_key))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false)))))

(defskeleton protocol1
  (vars (tkt_as mesg) (session_key skey) (nonceA nonceB text)
    (a b as name))
  (defstrand client 5 (tkt_as tkt_as) (session_key session_key)
    (nonceA nonceA) (nonceB nonceB) (a a) (b b) (as as))
  (non-orig (ltk a as) (ltk b as))
  (uniq-orig nonceA)
  (traces
    ((send (cat a b nonceA))
      (recv (enc nonceA b session_key tkt_as (ltk a as))) (send tkt_as)
      (recv (enc nonceB session_key))
      (send (enc (hash nonceB) session_key))))
  (label 14)
  (unrealized (0 1))
  (origs (nonceA (0 0)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton protocol1
  (vars (session_key skey) (nonceA nonceB text) (a b as name))
  (defstrand client 5 (tkt_as (enc session_key a (ltk b as)))
    (session_key session_key) (nonceA nonceA) (nonceB nonceB) (a a)
    (b b) (as as))
  (defstrand authserv 2 (session_key session_key) (nonceA nonceA) (a a)
    (b b) (as as))
  (defstrand server 2 (session_key session_key) (nonceB nonceB) (a a)
    (b b) (as as))
  (precedes ((0 0) (1 0)) ((0 2) (2 0)) ((1 1) (0 1)) ((2 1) (0 3)))
  (non-orig (ltk a as) (ltk b as))
  (uniq-orig session_key nonceA)
  (operation nonce-test (contracted (a-0 a) (b-0 b) (as-0 as))
    session_key (2 0) (enc session_key a (ltk b as))
    (enc nonceA b session_key (enc session_key a (ltk b as))
      (ltk a as)))
  (traces
    ((send (cat a b nonceA))
      (recv
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))) (send (enc session_key a (ltk b as)))
      (recv (enc nonceB session_key))
      (send (enc (hash nonceB) session_key)))
    ((recv (cat a b nonceA))
      (send
        (enc nonceA b session_key (enc session_key a (ltk b as))
          (ltk a as))))
    ((recv (enc session_key a (ltk b as)))
      (send (enc nonceB session_key))))
  (label 20)
  (parent 14)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (as as) (nonceA nonceA) (nonceB nonceB)
        (tkt_as (enc session_key a (ltk b as)))
        (session_key session_key))))
  (origs (session_key (1 1)) (nonceA (0 0))))

(comment "Nothing left to do")
